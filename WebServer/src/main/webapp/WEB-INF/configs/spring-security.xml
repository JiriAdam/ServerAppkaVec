<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <global-method-security pre-post-annotations="enabled"/>


    <!-- Turn security off for REST webservices... -->
    <http pattern="/rest/**" security="none" />

    <http auto-config="true" use-expressions="true">


        <access-denied-handler error-page="/WEB-INF/error_pages/403.jsp"/>


        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/user/**" access="hasRole('BASIC_USER')"/>


        <form-login
                login-page="/login"
                default-target-url="/account"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password"/>
        <logout logout-success-url="/login?logout"/>

        <csrf/>

    </http>


    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="postgresDataSource"
                               users-by-username-query="select username, password1 as password, enabled from app_user where username = ?"
                               authorities-by-username-query="select username, description as role from app_user
                                        join user_role_mn on app_user.id = user_role_mn.id_user
                                        join user_role on user_role_mn.id_role =  user_role.id where username = ?"/>
        </authentication-provider>
    </authentication-manager>


</beans:beans>

